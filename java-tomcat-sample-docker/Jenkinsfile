pipeline {
    agent any
    stages {
        stage('Build Application') {
            steps {
                sh 'bash -c "echo Hello from Bash"'
                sh 'bash -c "pwd"'
                sh 'bash -c "whoami"'
                sh 'bash -c "echo $PATH"'
                sh 'bash -c "echo $HOME"'
                sh 'bash -c "java -version"'
                sh 'bash -c "docker version"'
                sh '''#!/bin/bash
                    export SDKMAN_DIR="$HOME/.sdkman"
                    [[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"
                    # sdk version
                    mvn -f java-tomcat-sample-docker/pom.xml clean package
                '''
                // sh 'bash -c "sdk version"'
                // sh '''#!/bin/bash
                //      sdk version
                //     mvn -f java-tomcat-sample-docker/pom.xml clean package
                // '''
                // sh 
                // 'mvn -f java-tomcat-sample-docker/pom.xml clean package'
            }
            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }

        stage('Create Tomcat Docker Image'){
            steps {
                sh "pwd"
                sh "ls -a"
                sh "docker build ./java-tomcat-sample-docker -t tomcatsamplewebapp:${env.BUILD_ID}"
            }
        }


    }
}